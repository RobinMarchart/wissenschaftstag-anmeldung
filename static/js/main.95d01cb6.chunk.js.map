{"version":3,"sources":["WorkshopCard.jsx","LocalWorkshopRegistrations.js","Finished.jsx","WorkshopForm.jsx","App.jsx","serviceWorker.js","index.js"],"names":["WorkshopBody","props","Card","Body","Media","className","src","Image","alt","escapeHtml","source","Description","WorkshopCard","Header","Workshop","title","Badge","variant","short","image","description","Footer","authors","join","AccordionWorkshopCard","state","collapsed","Accordion","Toggle","as","eventKey","this","Key","toString","onClick","setState","icon","faAngleLeft","faAngleDown","size","Collapse","React","Component","storage","localStorage","getRegistration","reg","getItem","JSON","parse","Finished","prev","waiting","finished","Fade","in","onExited","animationFinsishedHandler","bind","unmountOnExit","faSpinner","spin","faCheck","WorkshopForm","workshop","chosen","chosen2","send","form","changed","window","addEventListener","warnIfUnsaved","event","message","returnValue","x","preventDefault","registration","name1","value","name2","class","workshop2","console","debug","setItem","stringify","e","error","setRegistration","Workshops","find","workshops","filter","Form","Group","controlId","Label","Control","defaultValue","onChange","handleSecondWorkshopChange","ref","map","y","key","ThisRef","onSubmit","handleSubmit","Row","Col","md","required","type","handleStateChange","placeholder","Classes","handleWorkshopChange","renderChosenWorkshop","renderSecondWorkshop","renderSecondChosenWorkshop","Button","App","Container","index","Boolean","location","hostname","match","undefined","baseUrl","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.95d01cb6.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card,Media,Accordion,Badge} from \"react-bootstrap\";\nimport ReactMarkdown from 'react-markdown/with-html';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAngleLeft,faAngleDown} from '@fortawesome/free-solid-svg-icons'\nimport './WorkshopCard.css'\n\nfunction WorkshopBody(props){\n    return <Card.Body>\n    <Media>\n    <img className=\"mr-3 workshop-image\" src={props.Image.src} alt={props.Image.alt}/>\n    <Media.Body>\n        <div className=\"workshop-card-body\">\n        <ReactMarkdown escapeHtml={false} source={props.Description}></ReactMarkdown>\n        </div>\n    </Media.Body>\n    </Media>\n    </Card.Body>;\n}\n\nexport function WorkshopCard(props){\n    return <div className=\"workshop-card\">\n        <Card>\n    <Card.Header>\n    <div className=\"workshop-header-float-group\">\n    <h5>\n    {props.Workshop.title}\n    </h5>\n    <div className=\"buffer\"></div>\n    <Badge variant=\"secondary\">{props.Workshop.short?\"45 Min.\":\"90 Min.\"}</Badge>\n    </div>\n    </Card.Header>\n    <WorkshopBody Image={props.Workshop.image} Description={props.Workshop.description}/>\n    <Card.Footer>\n    Von {props.Workshop.authors.join(\" & \")}\n    </Card.Footer>\n    </Card>\n    </div>;\n}\n\nexport class AccordionWorkshopCard extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={collapsed:true};\n        \n    }\n\n    render(){\n        return <div className=\"workshop-card\">\n    <Card>\n    <Accordion.Toggle as={Card.Header} eventKey={this.props.Key.toString()} onClick={()=>this.setState({collapsed:!this.state.collapsed})}>\n    <div className=\"workshop-card-accordion-header\">\n    <div className=\"workshop-header-float-group\">\n    <h4>\n    {this.props.Workshop.title} \n    </h4>\n    <div className=\"buffer\"></div>\n    <Badge variant=\"secondary\">{this.props.Workshop.short?\"45 Min.\":\"90 Min.\"}</Badge>\n    </div>\n    <FontAwesomeIcon icon={(this.state.collapsed)?faAngleLeft:faAngleDown} size=\"lg\"></FontAwesomeIcon>\n    </div>\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey={this.props.Key.toString()}>\n    <div>\n    <WorkshopBody Image={this.props.Workshop.image} Description={this.props.Workshop.description}/>\n    <Card.Footer>\n    Von {this.props.Workshop.authors.join(\" & \")}\n    </Card.Footer>\n    </div>\n    </Accordion.Collapse>\n    </Card>\n    </div>;\n    }\n}\n\n","const storage=localStorage;\n\nexport function getRegistration(){\n    let reg=storage.getItem(\"registration\");\n    return (reg)?JSON.parse(reg):null;\n}\n\nexport function setRegistration(reg){\n    try{\n        storage.setItem(\"registration\",JSON.stringify(reg))\n    }catch(e){\n        console.error(e);\n    }\n}","import React from \"react\";\nimport {Fade,Collapse} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faCheck,faSpinner} from \"@fortawesome/free-solid-svg-icons\"\nimport \"./Finished.css\"\nexport default class Finished extends React.Component{\n    constructor(props){\n        super(props);\n        this.prev=null;\n        this.state={waiting:false,finished:false};\n    }\n\n    animationFinsishedHandler(){\n        if(this.props.state===false)this.setState({waiting:true,finished:false});\n        else if(this.props.state) this.setState({waiting:false,finished:true});\n    }\n\n    render(){\n        if(this.prev!==this.props.state){\n            if(this.prev===null){\n                // eslint-disable-next-line react/no-direct-mutation-state\n                if(this.props.state)this.state={waiting:false,finished:true};\n                // eslint-disable-next-line react/no-direct-mutation-state\n                else this.state={waiting:true,finished:false};\n            }\n            // eslint-disable-next-line react/no-direct-mutation-state\n            else this.state={waiting:false,finished:false};\n            this.prev=this.props.state;\n        }\n        return<div>\n        <Fade in={this.state.waiting} onExited={this.animationFinsishedHandler.bind(this)} unmountOnExit>\n        <FontAwesomeIcon icon={faSpinner} spin size=\"2x\"></FontAwesomeIcon>\n        </Fade>\n        <Collapse in={this.state.finished} onExited={this.animationFinsishedHandler.bind(this)} unmountOnExit>\n        <FontAwesomeIcon icon={faCheck} size=\"2x\"></FontAwesomeIcon>\n        </Collapse>\n        </div>\n    }\n}","import React from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { WorkshopCard } from \"./WorkshopCard\";\nimport { getRegistration, setRegistration } from \"./LocalWorkshopRegistrations\";\nimport Finished from \"./Finished\"\nimport \"./WorkshopForm.css\"\n\nexport default class WorkshopForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { workshop: getRegistration(), chosen: \"\", chosen2: \"\", send: null, short: false };\n        if (this.state.workshop) {\n            this.state.chosen = this.state.workshop[3];\n            this.state.chosen2 = this.state.workshop[4];\n        }\n        this.form = {};\n        this.changed = false;\n        //display warning as user leaves\n        window.addEventListener(\"beforeunload\", this.warnIfUnsaved.bind(this));\n    }\n\n    warnIfUnsaved(event) {\n        if (this.changed && !this.state.send) {\n            let notsaved = \"Nicht alle änderungen wurden gesendet!\";\n            let notsend = \"Nicht alle Änderungen wurden gesendet, bitte kurz warten!\";\n            let message = (this.state.send === null) ? notsaved : notsend;\n            (event || window.event).returnValue = message;\n            return message;\n        }\n        else return undefined\n    }\n\n    handleSubmit(x) {\n        x.preventDefault();\n        let registration = [this.form.name1.value, this.form.name2.value, this.form.class.value,\n        this.form.workshop.value, (this.state.short) ? this.form.workshop2.value : \"\"];\n        console.debug(registration);\n        setRegistration(registration);\n        this.setState({ workshop: registration, send: false });\n    }\n\n    handleWorkshopChange(x) {\n        if (this.props.Workshops.find(x => x.title === this.form.workshop.value).short) this.setState({ chosen: this.form.workshop.value, send: null, short: true });\n        else this.setState({ chosen: this.form.workshop.value, send: null, short: false });\n        this.changed = true;\n    }\n\n    handleSecondWorkshopChange(x) {\n        this.setState({ chosen2: this.form.workshop2.value, send: null });\n        this.changed = true;\n    }\n\n    renderChosenWorkshop() {\n        if (this.state.chosen) {\n            let workshop = this.props.Workshops.find(x => x.title === this.state.chosen);\n            if (workshop) return <WorkshopCard Workshop={workshop} />\n        }\n    }\n\n    renderSecondWorkshop() {\n        if (this.state.short&&this.state.chosen) {\n            let workshops = this.props.Workshops.filter(x=>x.short&&(x.title!==this.state.chosen));\n            return <Form.Group controlId=\"formWorkshop2\">\n                <Form.Label>Workshop</Form.Label>\n                <Form.Control as=\"select\" defaultValue={(this.state.workshop) ? this.state.workshop[4] : null} onChange={this.handleSecondWorkshopChange.bind(this)} ref={ref => this.form.workshop2 = ref}>\n                    {workshops.map((x, y) => <option key={y.toString()}>{x.title}</option>)}\n                </Form.Control>\n            </Form.Group>;\n        }\n    }\n\n    renderSecondChosenWorkshop() {\n        if (this.state.short && this.state.chosen2) {\n            let workshop = this.props.Workshops.find(x => x.title === this.state.chosen2);\n            if (workshop) return <WorkshopCard Workshop={workshop} />\n        }\n    }\n\n    handleStateChange() {\n        this.setState({ send: null })\n        this.changed = true;\n    }\n\n\n    render() {\n        if (this.props.ThisRef) this.props.ThisRef(this);\n        return <Form onSubmit={this.handleSubmit.bind(this)}>\n\n            <Form.Row>\n                <Form.Group controlId=\"formName1\" as={Col} md=\"4\">\n                    <Form.Label>Vorname</Form.Label>\n                    <Form.Control required type=\"text\" onChange={this.handleStateChange.bind(this)} placeholder=\"Otto\" defaultValue={(this.state.workshop) ? this.state.workshop[0] : null} ref={ref => this.form.name1 = ref}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"formName2\" as={Col} md=\"4\">\n                    <Form.Label>Nachname</Form.Label>\n                    <Form.Control required type=\"text\" onChange={this.handleStateChange.bind(this)} placeholder=\"Maier\" defaultValue={(this.state.workshop) ? this.state.workshop[1] : null} ref={ref => this.form.name2 = ref}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"formClass\" as={Col} md=\"4\">\n                    <Form.Label>Classe</Form.Label>\n                    <Form.Control as=\"select\" onChange={this.handleStateChange.bind(this)} defaultValue={(this.state.workshop) ? this.state.workshop[2] : null} ref={ref => this.form.class = ref}>\n                        {this.props.Classes.map((x, y) => <option key={y.toString()}>{x}</option>)}\n                    </Form.Control>\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"formWorkshop\">\n                <Form.Label>Workshop</Form.Label>\n                <Form.Control as=\"select\" defaultValue={(this.state.workshop) ? this.state.workshop[3] : null} onChange={this.handleWorkshopChange.bind(this)} ref={ref => this.form.workshop = ref}>\n                    {this.props.Workshops.map((x, y) => <option key={y.toString()}>{x.title}</option>)}\n                </Form.Control>\n            </Form.Group>\n\n            {this.renderChosenWorkshop()}\n\n            {this.renderSecondWorkshop()}\n\n            {this.renderSecondChosenWorkshop()}\n\n            <div className=\"submit-group\">\n                <Button type=\"submit\">Anmelden</Button>\n                <div className=\"submit-status\">\n                    <Finished state={this.state.send}></Finished>\n                </div>\n            </div>\n\n        </Form>\n    }\n}","import React from 'react';\nimport { Container, Accordion } from 'react-bootstrap';\nimport { AccordionWorkshopCard } from './WorkshopCard';\nimport WorkshopForm from './WorkshopForm';\nimport './App.css';\nimport index from \"./workshops.json\"\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <Container>\n        <Accordion>\n          { index.workshops.map((x, y) => <AccordionWorkshopCard Key={ y } key={ y.toString() } Workshop={ x }></AccordionWorkshopCard>) }\n        </Accordion>\n        <div className=\"separator\"></div>\n        <WorkshopForm Classes={ [\"extern\", \"10a\", \"10b\", \"10c\", \"10d\", \"10e\"] } Workshops={ index.workshops }>\n        </WorkshopForm>\n      </Container>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.baseUrl===undefined)window.baseUrl=\"http://localhost:4000/\"\n\nReactDOM.render(<App/>, document.getElementById('root'));\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}