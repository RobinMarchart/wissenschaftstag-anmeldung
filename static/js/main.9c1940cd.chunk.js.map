{"version":3,"sources":["WorkshopCard.jsx","LocalWorkshopRegistrations.js","FormSelect.jsx","Finished.jsx","WorkshopForm.jsx","remote.js","App.jsx","serviceWorker.js","index.js","openpgp.worker.js"],"names":["WorkshopBody","props","Card","Body","Media","className","src","Image","alt","escapeHtml","source","Description","WorkshopCard","Header","Workshop","title","Badge","variant","short","image","description","Footer","authors","join","AccordionWorkshopCard","state","collapsed","Accordion","Toggle","as","eventKey","this","Key","toString","onClick","setState","icon","faAngleLeft","faAngleDown","size","Collapse","React","Component","storage","localStorage","getRegistration","reg","getItem","JSON","parse","FormSelect","unselected","defaultValue","event","onChange","Form","Control","handleOnChange","bind","ref","Ref","Options","map","x","y","key","Finished","prev","waiting","finished","error","undefined","Fade","in","onExited","animationFinsishedHandler","unmountOnExit","faSpinner","spin","faCheck","faTimes","WorkshopForm","workshop","chosen","chosen2","send","form","changed","window","addEventListener","warnIfUnsaved","message","returnValue","preventDefault","registration","name1","value","name2","class","workshop2","console","debug","setItem","stringify","e","setRegistration","Remote","then","handleSuccessfulSubmit","handleUnsuccessfulSubmit","log","Workshops","find","workshops","filter","Group","controlId","Label","handleSecondWorkshopChange","ThisRef","onSubmit","handleSubmit","Row","Col","md","required","type","handleStateChange","placeholder","Classes","handleWorkshopChange","renderChosenWorkshop","renderSecondWorkshop","renderSecondChosenWorkshop","Button","log_too","data","RemoteConnection","config","initWorker","workers","pgpWorker","remote","url","readArmored","reg_data","remote_config","a","async","axios","encrypt","fromText","keys","publicKeys","armor","Math","floor","Date","now","timestamp","put","sendRegistration","App","Container","index","classes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister","module","exports","Worker"],"mappings":"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","file":"static/js/main.9c1940cd.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card,Media,Accordion,Badge} from \"react-bootstrap\";\nimport ReactMarkdown from 'react-markdown/with-html';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAngleLeft,faAngleDown} from '@fortawesome/free-solid-svg-icons'\nimport './WorkshopCard.css'\n\nfunction WorkshopBody(props){\n    return <Card.Body>\n    <Media>\n    <img className=\"mr-3 workshop-image\" src={props.Image.src} alt={props.Image.alt}/>\n    <Media.Body>\n        <div className=\"workshop-card-body\">\n        <ReactMarkdown escapeHtml={false} source={props.Description}></ReactMarkdown>\n        </div>\n    </Media.Body>\n    </Media>\n    </Card.Body>;\n}\n\nexport function WorkshopCard(props){\n    return <div className=\"workshop-card\">\n        <Card>\n    <Card.Header>\n    <div className=\"workshop-header-float-group\">\n    <h5>\n    {props.Workshop.title}\n    </h5>\n    <div className=\"buffer\"></div>\n    <Badge variant=\"secondary\">{props.Workshop.short?\"45 Min.\":\"90 Min.\"}</Badge>\n    </div>\n    </Card.Header>\n    <WorkshopBody Image={props.Workshop.image} Description={props.Workshop.description}/>\n    <Card.Footer>\n    Von {props.Workshop.authors.join(\" & \")}\n    </Card.Footer>\n    </Card>\n    </div>;\n}\n\nexport class AccordionWorkshopCard extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state={collapsed:true};\n        \n    }\n\n    render(){\n        return <div className=\"workshop-card\">\n    <Card>\n    <Accordion.Toggle as={Card.Header} eventKey={this.props.Key.toString()} onClick={()=>this.setState({collapsed:!this.state.collapsed})}>\n    <div className=\"workshop-card-accordion-header\">\n    <div className=\"workshop-header-float-group\">\n    <h4>\n    {this.props.Workshop.title} \n    </h4>\n    <div className=\"buffer\"></div>\n    <Badge variant=\"secondary\">{this.props.Workshop.short?\"45 Min.\":\"90 Min.\"}</Badge>\n    </div>\n    <FontAwesomeIcon icon={(this.state.collapsed)?faAngleLeft:faAngleDown} size=\"lg\"></FontAwesomeIcon>\n    </div>\n    </Accordion.Toggle>\n    <Accordion.Collapse eventKey={this.props.Key.toString()}>\n    <div>\n    <WorkshopBody Image={this.props.Workshop.image} Description={this.props.Workshop.description}/>\n    <Card.Footer>\n    Von {this.props.Workshop.authors.join(\" & \")}\n    </Card.Footer>\n    </div>\n    </Accordion.Collapse>\n    </Card>\n    </div>;\n    }\n}\n\n","const storage=localStorage;\n\nexport function getRegistration(){\n    let reg=storage.getItem(\"registration\");\n    return (reg)?JSON.parse(reg):null;\n}\n\nexport function setRegistration(reg){\n    try{\n        storage.setItem(\"registration\",JSON.stringify(reg))\n    }catch(e){\n        console.error(e);\n    }\n}","import React from \"react\"\nimport {Form} from \"react-bootstrap\"\n\nclass FormSelect extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={unselected:!this.props.defaultValue};\n    }\n\n    handleOnChange(event){\n        this.props.onChange(event);\n        if(this.state.unselected)this.setState({unselected:false});\n    }\n\n    render(){\n        return <Form.Control as=\"select\" \n        onChange={this.handleOnChange.bind(this)} \n        defaultValue={this.props.defaultValue ? this.props.defaultValue : \"Bitte Auswählen\"} \n        ref={this.props.Ref}>\n        {this.props.Options.map((x, y) => <option key={y.toString()}>{x}</option>)}\n        {this.state.unselected?<option>Bitte Auswählen</option>:null}\n    </Form.Control>;\n    }\n}\n\nexport default FormSelect","import React from \"react\";\nimport {Fade,Collapse} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faCheck,faSpinner,faTimes} from \"@fortawesome/free-solid-svg-icons\"\nimport \"./Finished.css\"\nexport default class Finished extends React.Component{\n    constructor(props){\n        super(props);\n        this.prev=null;\n        this.state={waiting:false,finished:false,error:false};\n    }\n\n    animationFinsishedHandler(){\n        if(this.props.state===undefined)this.setState({waiting:true});\n        else if(this.props.state===true) this.setState({finished:true});\n        else if(this.props.state===false) this.setState({error:true})\n    }\n\n    render(){\n        if(this.prev!==this.props.state){\n            if(this.prev===undefined){\n                // eslint-disable-next-line react/no-direct-mutation-state\n                if(this.props.state)this.state={finished:true};\n                // eslint-disable-next-line react/no-direct-mutation-state\n                else if(this.props.state===null) this.state={waiting:true};\n                // eslint-disable-next-line react/no-direct-mutation-state\n                else if(this.props.state===false)this.state={error:true};\n            }\n            // eslint-disable-next-line react/no-direct-mutation-state\n            else this.state={waiting:false,finished:false,error:false};\n            this.prev=this.props.state;\n        }\n        return<div>\n        <Fade in={this.state.waiting} onExited={this.animationFinsishedHandler.bind(this)} unmountOnExit>\n        <FontAwesomeIcon icon={faSpinner} spin size=\"2x\"></FontAwesomeIcon>\n        </Fade>\n        <Collapse in={this.state.finished} onExited={this.animationFinsishedHandler.bind(this)} unmountOnExit>\n        <FontAwesomeIcon icon={faCheck} size=\"2x\"></FontAwesomeIcon>\n        </Collapse>\n        <Collapse in={this.state.error} onExited={this.animationFinsishedHandler.bind(this)} unmountOnExit>\n        <FontAwesomeIcon icon={faTimes} size=\"2x\"></FontAwesomeIcon>\n        </Collapse>\n        </div>;\n    }\n}","import React from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { WorkshopCard } from \"./WorkshopCard\";\nimport { getRegistration, setRegistration } from \"./LocalWorkshopRegistrations\";\nimport FormSelect from \"./FormSelect\";\nimport Finished from \"./Finished\";\nimport \"./WorkshopForm.css\";\n\nexport default class WorkshopForm extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { workshop: getRegistration(), chosen: \"\", chosen2: \"\", send: undefined, short: false };\n        if (this.state.workshop) {\n            this.state.chosen = this.state.workshop[3];\n            this.state.chosen2 = this.state.workshop[4];\n        }\n        this.form = {};\n        this.changed = false;\n        //display warning as user leaves\n        window.addEventListener(\"beforeunload\", this.warnIfUnsaved.bind(this));\n    }\n\n    warnIfUnsaved(event) {\n        if (this.changed && !this.state.send) {\n            let notsaved = \"Nicht alle änderungen wurden gesendet!\";\n            let notsend = \"Nicht alle Änderungen wurden gesendet, bitte kurz warten!\";\n            let message = (this.state.send === null) ? notsaved : notsend;\n            (event || window.event).returnValue = message;\n            return message;\n        }\n        else return undefined\n    }\n\n    handleSubmit(x) {\n        x.preventDefault();\n        let registration = [this.form.name1.value, this.form.name2.value, this.form.class.value,\n        this.form.workshop.value, (this.state.short) ? this.form.workshop2.value : \"\"];\n        console.debug(registration);\n        setRegistration(registration);\n        this.setState({ workshop: registration, send: null });\n        this.props.Remote.send(registration).then(this.handleSuccessfulSubmit.bind(this), this.handleUnsuccessfulSubmit.bind(this));\n    }\n\n    handleSuccessfulSubmit(x) {\n        console.log(x.message)\n        this.setState({ send: true });\n    }\n\n    handleUnsuccessfulSubmit(e) {\n        console.error(e.message);\n        this.setState({ send: false });\n    }\n\n    handleWorkshopChange(x) {\n        if (this.props.Workshops.find(x => x.title === this.form.workshop.value).short) this.setState({ chosen: this.form.workshop.value, send: undefined, short: true });\n        else this.setState({ chosen: this.form.workshop.value, send: undefined, short: false });\n        this.changed = true;\n    }\n\n    handleSecondWorkshopChange(x) {\n        this.setState({ chosen2: this.form.workshop2.value, send: undefined });\n        this.changed = true;\n    }\n\n    renderChosenWorkshop() {\n        if (this.state.chosen) {\n            let workshop = this.props.Workshops.find(x => x.title === this.state.chosen);\n            if (workshop) return <WorkshopCard Workshop={workshop} />\n        }\n    }\n\n    renderSecondWorkshop() {\n        if (this.state.short && this.state.chosen) {\n            let workshops = this.props.Workshops.filter(x => x.short && (x.title !== this.state.chosen));\n            return <Form.Group controlId=\"formWorkshop2\">\n                <Form.Label>Workshop</Form.Label>\n                <FormSelect\n                    defaultValue={(this.state.workshop) ? this.state.workshop[4] : null}\n                    onChange={this.handleSecondWorkshopChange.bind(this)}\n                    Ref={ref => this.form.workshop2 = ref}\n                    Options={workshops.map(x=>x.title)}\n                />\n            </Form.Group>;\n        }\n    }\n\n    renderSecondChosenWorkshop() {\n        if (this.state.short && this.state.chosen2) {\n            let workshop = this.props.Workshops.find(x => x.title === this.state.chosen2);\n            if (workshop) return <WorkshopCard Workshop={workshop} />\n        }\n    }\n\n    handleStateChange() {\n        this.setState({ send: undefined })\n        this.changed = true;\n    }\n\n\n    render() {\n        if (this.props.ThisRef) this.props.ThisRef(this);\n        return <Form onSubmit={this.handleSubmit.bind(this)}>\n\n            <Form.Row>\n                <Form.Group controlId=\"formName1\" as={Col} md=\"4\">\n                    <Form.Label>Vorname</Form.Label>\n                    <Form.Control required type=\"text\" onChange={this.handleStateChange.bind(this)} placeholder=\"Otto\" defaultValue={(this.state.workshop) ? this.state.workshop[0] : null} ref={ref => this.form.name1 = ref}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"formName2\" as={Col} md=\"4\">\n                    <Form.Label>Nachname</Form.Label>\n                    <Form.Control required type=\"text\" onChange={this.handleStateChange.bind(this)} placeholder=\"Maier\" defaultValue={(this.state.workshop) ? this.state.workshop[1] : null} ref={ref => this.form.name2 = ref}></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"formClass\" as={Col} md=\"4\">\n                    <Form.Label>Klasse</Form.Label>\n                    <FormSelect\n                        onChange={this.handleStateChange.bind(this)}\n                        defaultValue={(this.state.workshop) ? this.state.workshop[2] : null}\n                        Ref={ref => this.form.class = ref}\n                        Options={this.props.Classes}\n                    />\n                </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"formWorkshop\">\n                <Form.Label>Workshop</Form.Label>\n                <FormSelect\n                    defaultValue={(this.state.workshop) ? this.state.workshop[3] : null}\n                    onChange={this.handleWorkshopChange.bind(this)}\n                    Ref={ref => this.form.workshop = ref}\n                    Options={this.props.Workshops.map(x=>x.title)} />\n            </Form.Group>\n\n            {this.renderChosenWorkshop()}\n\n            {this.renderSecondWorkshop()}\n\n            {this.renderSecondChosenWorkshop()}\n\n            <div className=\"submit-group\">\n                <Button type=\"submit\">Anmelden</Button>\n                <div className=\"submit-status\">\n                    <Finished state={this.state.send}></Finished>\n                </div>\n            </div>\n\n        </Form>\n    }\n}","import { encrypt, message, initWorker, key } from \"openpgp\";\nimport axios from \"axios\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport pgpWorker from \"worker-loader!./openpgp.worker.js\"\n\nfunction log_too(data) {\n    console.log(data);\n    return data;\n}\n\nasync function sendRegistration(remote_config, reg_data) {\n    console.log(remote_config.url + \"register\");\n    return await axios.put(remote_config.url + \"register\", {data:log_too((await encrypt({\n        message: message.fromText(JSON.stringify(reg_data)),\n        publicKeys: (await remote_config.key).keys,\n        armor: true\n    })).data),\n    timestamp: Math.floor(Date.now() / 1000)\n});\n}\n\nclass RemoteConnection {\n\n    constructor(config) {\n        initWorker({ workers: [new pgpWorker()] });\n        this.remote = { url: config.url, key: key.readArmored(config.key) };\n    }\n\n    send(reg_data) {\n        return sendRegistration(this.remote, reg_data);\n    }\n\n}\n\nexport default RemoteConnection;","import React from 'react';\nimport { Container, Accordion } from 'react-bootstrap';\nimport { AccordionWorkshopCard } from './WorkshopCard';\nimport WorkshopForm from './WorkshopForm';\nimport './App.css';\nimport index from \"./workshops.json\"\nimport Remote from \"./remote\";\n\nfunction App(props) {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Container>\n\t\t\t\t<Accordion>\n\t\t\t\t\t{index.workshops.map((x, y) => <AccordionWorkshopCard Key={y} key={y.toString()} Workshop={x}></AccordionWorkshopCard>)}\n\t\t\t\t</Accordion>\n\t\t\t\t<div className=\"separator\"></div>\n\t\t\t\t<WorkshopForm Classes={index.classes} Workshops={index.workshops} Remote={new Remote(index)}>\n\t\t\t\t</WorkshopForm>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nserviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"312cc4062452d5db5825.worker.js\");\n};"],"sourceRoot":""}